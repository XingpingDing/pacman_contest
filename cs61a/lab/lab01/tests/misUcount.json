{"countData": {"orshrtcirfalsey-or": 1, "sloppyarith": 1, "sloppyifcondition-sloppy": 2, "wrnboolopprecedence-boolorderofoperations": 1, "wrnboolopprecedence": 1, "swapandor-and": 3, "andshrtcirtruthy": 2, "swapandor-shortcircuit": 3, "zerodivdsnterr-zerodiverror": 1, "sloppyarith-sloppy": 1, "zerodivdsnterr": 1, "strdsntneedquotes": 1, "strdsntneedquotes-stringsyntax": 1, "boolexprrtnbool-and": 3, "swapandor-or": 3, "andshrtcirtruthy-shortcircuit": 2, "boolexprrtnbool": 3, "andshrtcirtruthy-and": 2, "nfloordivnisweird": 1, "swapandor": 3, "sloppyifcondition": 2, "boolexprrtnbool-or": 3, "orshrtcirfalsey": 1, "nfloordivnisweird-divisiontype": 1, "orshrtcirfalsey-shortcircuit": 1}, "answerDict": {">>> def go(n):\n...     if n % 2 != 0:\n...         print(n / 2)\n...         return\n...     while n > 0:\n...         print(n)\n...         n = n // 2\n>>> go(4)\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\n>>> go(5)\nLOCKED_ANSWER\n": ["['2']", "['4', '2', '0.5']"], ">>> x = [1, 3, [5, 7], 9]\nx[2][1]\n>>> x = [[7]]\nx[0][0]\n>>> x = [1, [2, [3, [4, [5, [6, [7]]]]]]]\nLOCKED_ANSWER\n": ["['x[1][1][1][1][1][1]']"], ">>> def how_big(x):\n...     if x > 10:\n...         print('huge')\n...     elif x > 5:\n...         return 'big'\n...     elif x > 0:\n...         print('small')\n...     else:\n...         print(\"nothin'\")\n>>> how_big(7)\nLOCKED_ANSWER\n>>> how_big(12)\nLOCKED_ANSWER\n>>> how_big(1)\nLOCKED_ANSWER\n>>> how_big(-1)\nLOCKED_ANSWER\n": ["['big']", "['small']"], ">>> True and 13\n13\n>>> False or 0\nLOCKED_ANSWER\n>>> not 10\nLOCKED_ANSWER\n>>> not None\nLOCKED_ANSWER\n": ["['False']"], ">>> True and 1 / 0 and False\nLOCKED_ANSWER\n>>> True or 1 / 0 or False\nLOCKED_ANSWER\n>>> True and 0\nLOCKED_ANSWER\n>>> False or 1\nLOCKED_ANSWER\n>>> 1 and 3 and 6 and 10 and 15\nLOCKED_ANSWER\n>>> 0 or False or 2 or 1 / 0\nLOCKED_ANSWER\n": ["['False']"], ">>> True and 13\nLOCKED_ANSWER\n>>> False or 0\nLOCKED_ANSWER\n>>> not 10\nLOCKED_ANSWER\n>>> not None\nLOCKED_ANSWER\n": ["['True']", "['true']"]}}